// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FloorProto.proto

package com.navatar.protobufs;

public final class FloorProto {
  private FloorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FloorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.navatar.protobufs.Floor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 number = 1;</code>
     *
     * <pre>
     * The floor's number. 
     * </pre>
     */
    boolean hasNumber();
    /**
     * <code>optional int32 number = 1;</code>
     *
     * <pre>
     * The floor's number. 
     * </pre>
     */
    int getNumber();

    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    java.util.List<com.navatar.protobufs.LandmarkProto.Landmark> 
        getLandmarksList();
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    com.navatar.protobufs.LandmarkProto.Landmark getLandmarks(int index);
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    int getLandmarksCount();
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    java.util.List<? extends com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder> 
        getLandmarksOrBuilderList();
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder getLandmarksOrBuilder(
        int index);

    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> 
        getNavigableSpacesList();
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    com.navatar.protobufs.NavigableSpaceProto.NavigableSpace getNavigableSpaces(int index);
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    int getNavigableSpacesCount();
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    java.util.List<? extends com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder> 
        getNavigableSpacesOrBuilderList();
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder getNavigableSpacesOrBuilder(
        int index);

    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    boolean hasMinimap();
    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    com.navatar.protobufs.MinimapProto.Minimap getMinimap();
    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    com.navatar.protobufs.MinimapProto.MinimapOrBuilder getMinimapOrBuilder();
  }
  /**
   * Protobuf type {@code com.navatar.protobufs.Floor}
   *
   * <pre>
   **
   * The protobuf definition for the Floor class.
   * </pre>
   */
  public static final class Floor extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.navatar.protobufs.Floor)
      FloorOrBuilder {
    // Use Floor.newBuilder() to construct.
    private Floor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Floor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Floor defaultInstance;
    public static Floor getDefaultInstance() {
      return defaultInstance;
    }

    public Floor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Floor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              number_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                landmarks_ = new java.util.ArrayList<com.navatar.protobufs.LandmarkProto.Landmark>();
                mutable_bitField0_ |= 0x00000002;
              }
              landmarks_.add(input.readMessage(com.navatar.protobufs.LandmarkProto.Landmark.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                navigableSpaces_ = new java.util.ArrayList<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace>();
                mutable_bitField0_ |= 0x00000004;
              }
              navigableSpaces_.add(input.readMessage(com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.navatar.protobufs.MinimapProto.Minimap.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = minimap_.toBuilder();
              }
              minimap_ = input.readMessage(com.navatar.protobufs.MinimapProto.Minimap.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minimap_);
                minimap_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          landmarks_ = java.util.Collections.unmodifiableList(landmarks_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          navigableSpaces_ = java.util.Collections.unmodifiableList(navigableSpaces_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.navatar.protobufs.FloorProto.internal_static_com_navatar_protobufs_Floor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.navatar.protobufs.FloorProto.internal_static_com_navatar_protobufs_Floor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.navatar.protobufs.FloorProto.Floor.class, com.navatar.protobufs.FloorProto.Floor.Builder.class);
    }

    public static com.google.protobuf.Parser<Floor> PARSER =
        new com.google.protobuf.AbstractParser<Floor>() {
      public Floor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Floor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Floor> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NUMBER_FIELD_NUMBER = 1;
    private int number_;
    /**
     * <code>optional int32 number = 1;</code>
     *
     * <pre>
     * The floor's number. 
     * </pre>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 number = 1;</code>
     *
     * <pre>
     * The floor's number. 
     * </pre>
     */
    public int getNumber() {
      return number_;
    }

    public static final int LANDMARKS_FIELD_NUMBER = 2;
    private java.util.List<com.navatar.protobufs.LandmarkProto.Landmark> landmarks_;
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    public java.util.List<com.navatar.protobufs.LandmarkProto.Landmark> getLandmarksList() {
      return landmarks_;
    }
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    public java.util.List<? extends com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder> 
        getLandmarksOrBuilderList() {
      return landmarks_;
    }
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    public int getLandmarksCount() {
      return landmarks_.size();
    }
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    public com.navatar.protobufs.LandmarkProto.Landmark getLandmarks(int index) {
      return landmarks_.get(index);
    }
    /**
     * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
     *
     * <pre>
     * This floor's landmarks. 
     * </pre>
     */
    public com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder getLandmarksOrBuilder(
        int index) {
      return landmarks_.get(index);
    }

    public static final int NAVIGABLESPACES_FIELD_NUMBER = 3;
    private java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> navigableSpaces_;
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    public java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> getNavigableSpacesList() {
      return navigableSpaces_;
    }
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    public java.util.List<? extends com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder> 
        getNavigableSpacesOrBuilderList() {
      return navigableSpaces_;
    }
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    public int getNavigableSpacesCount() {
      return navigableSpaces_.size();
    }
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    public com.navatar.protobufs.NavigableSpaceProto.NavigableSpace getNavigableSpaces(int index) {
      return navigableSpaces_.get(index);
    }
    /**
     * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
     *
     * <pre>
     * The navigable spaces of this floor. 
     * </pre>
     */
    public com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder getNavigableSpacesOrBuilder(
        int index) {
      return navigableSpaces_.get(index);
    }

    public static final int MINIMAP_FIELD_NUMBER = 4;
    private com.navatar.protobufs.MinimapProto.Minimap minimap_;
    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    public boolean hasMinimap() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    public com.navatar.protobufs.MinimapProto.Minimap getMinimap() {
      return minimap_;
    }
    /**
     * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
     *
     * <pre>
     * The minimap representing the navigability of this floor. 
     * </pre>
     */
    public com.navatar.protobufs.MinimapProto.MinimapOrBuilder getMinimapOrBuilder() {
      return minimap_;
    }

    private void initFields() {
      number_ = 0;
      landmarks_ = java.util.Collections.emptyList();
      navigableSpaces_ = java.util.Collections.emptyList();
      minimap_ = com.navatar.protobufs.MinimapProto.Minimap.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, number_);
      }
      for (int i = 0; i < landmarks_.size(); i++) {
        output.writeMessage(2, landmarks_.get(i));
      }
      for (int i = 0; i < navigableSpaces_.size(); i++) {
        output.writeMessage(3, navigableSpaces_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, minimap_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, number_);
      }
      for (int i = 0; i < landmarks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, landmarks_.get(i));
      }
      for (int i = 0; i < navigableSpaces_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, navigableSpaces_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, minimap_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.navatar.protobufs.FloorProto.Floor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.navatar.protobufs.FloorProto.Floor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.navatar.protobufs.Floor}
     *
     * <pre>
     **
     * The protobuf definition for the Floor class.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.navatar.protobufs.Floor)
        com.navatar.protobufs.FloorProto.FloorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.navatar.protobufs.FloorProto.internal_static_com_navatar_protobufs_Floor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.navatar.protobufs.FloorProto.internal_static_com_navatar_protobufs_Floor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.navatar.protobufs.FloorProto.Floor.class, com.navatar.protobufs.FloorProto.Floor.Builder.class);
      }

      // Construct using com.navatar.protobufs.FloorProto.Floor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getLandmarksFieldBuilder();
          getNavigableSpacesFieldBuilder();
          getMinimapFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        number_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (landmarksBuilder_ == null) {
          landmarks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          landmarksBuilder_.clear();
        }
        if (navigableSpacesBuilder_ == null) {
          navigableSpaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          navigableSpacesBuilder_.clear();
        }
        if (minimapBuilder_ == null) {
          minimap_ = com.navatar.protobufs.MinimapProto.Minimap.getDefaultInstance();
        } else {
          minimapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.navatar.protobufs.FloorProto.internal_static_com_navatar_protobufs_Floor_descriptor;
      }

      public com.navatar.protobufs.FloorProto.Floor getDefaultInstanceForType() {
        return com.navatar.protobufs.FloorProto.Floor.getDefaultInstance();
      }

      public com.navatar.protobufs.FloorProto.Floor build() {
        com.navatar.protobufs.FloorProto.Floor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.navatar.protobufs.FloorProto.Floor buildPartial() {
        com.navatar.protobufs.FloorProto.Floor result = new com.navatar.protobufs.FloorProto.Floor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.number_ = number_;
        if (landmarksBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            landmarks_ = java.util.Collections.unmodifiableList(landmarks_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.landmarks_ = landmarks_;
        } else {
          result.landmarks_ = landmarksBuilder_.build();
        }
        if (navigableSpacesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            navigableSpaces_ = java.util.Collections.unmodifiableList(navigableSpaces_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.navigableSpaces_ = navigableSpaces_;
        } else {
          result.navigableSpaces_ = navigableSpacesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (minimapBuilder_ == null) {
          result.minimap_ = minimap_;
        } else {
          result.minimap_ = minimapBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.navatar.protobufs.FloorProto.Floor) {
          return mergeFrom((com.navatar.protobufs.FloorProto.Floor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.navatar.protobufs.FloorProto.Floor other) {
        if (other == com.navatar.protobufs.FloorProto.Floor.getDefaultInstance()) return this;
        if (other.hasNumber()) {
          setNumber(other.getNumber());
        }
        if (landmarksBuilder_ == null) {
          if (!other.landmarks_.isEmpty()) {
            if (landmarks_.isEmpty()) {
              landmarks_ = other.landmarks_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLandmarksIsMutable();
              landmarks_.addAll(other.landmarks_);
            }
            onChanged();
          }
        } else {
          if (!other.landmarks_.isEmpty()) {
            if (landmarksBuilder_.isEmpty()) {
              landmarksBuilder_.dispose();
              landmarksBuilder_ = null;
              landmarks_ = other.landmarks_;
              bitField0_ = (bitField0_ & ~0x00000002);
              landmarksBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLandmarksFieldBuilder() : null;
            } else {
              landmarksBuilder_.addAllMessages(other.landmarks_);
            }
          }
        }
        if (navigableSpacesBuilder_ == null) {
          if (!other.navigableSpaces_.isEmpty()) {
            if (navigableSpaces_.isEmpty()) {
              navigableSpaces_ = other.navigableSpaces_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNavigableSpacesIsMutable();
              navigableSpaces_.addAll(other.navigableSpaces_);
            }
            onChanged();
          }
        } else {
          if (!other.navigableSpaces_.isEmpty()) {
            if (navigableSpacesBuilder_.isEmpty()) {
              navigableSpacesBuilder_.dispose();
              navigableSpacesBuilder_ = null;
              navigableSpaces_ = other.navigableSpaces_;
              bitField0_ = (bitField0_ & ~0x00000004);
              navigableSpacesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNavigableSpacesFieldBuilder() : null;
            } else {
              navigableSpacesBuilder_.addAllMessages(other.navigableSpaces_);
            }
          }
        }
        if (other.hasMinimap()) {
          mergeMinimap(other.getMinimap());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.navatar.protobufs.FloorProto.Floor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.navatar.protobufs.FloorProto.Floor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int number_ ;
      /**
       * <code>optional int32 number = 1;</code>
       *
       * <pre>
       * The floor's number. 
       * </pre>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 number = 1;</code>
       *
       * <pre>
       * The floor's number. 
       * </pre>
       */
      public int getNumber() {
        return number_;
      }
      /**
       * <code>optional int32 number = 1;</code>
       *
       * <pre>
       * The floor's number. 
       * </pre>
       */
      public Builder setNumber(int value) {
        bitField0_ |= 0x00000001;
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 number = 1;</code>
       *
       * <pre>
       * The floor's number. 
       * </pre>
       */
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000001);
        number_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.navatar.protobufs.LandmarkProto.Landmark> landmarks_ =
        java.util.Collections.emptyList();
      private void ensureLandmarksIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          landmarks_ = new java.util.ArrayList<com.navatar.protobufs.LandmarkProto.Landmark>(landmarks_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.navatar.protobufs.LandmarkProto.Landmark, com.navatar.protobufs.LandmarkProto.Landmark.Builder, com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder> landmarksBuilder_;

      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public java.util.List<com.navatar.protobufs.LandmarkProto.Landmark> getLandmarksList() {
        if (landmarksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(landmarks_);
        } else {
          return landmarksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public int getLandmarksCount() {
        if (landmarksBuilder_ == null) {
          return landmarks_.size();
        } else {
          return landmarksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public com.navatar.protobufs.LandmarkProto.Landmark getLandmarks(int index) {
        if (landmarksBuilder_ == null) {
          return landmarks_.get(index);
        } else {
          return landmarksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder setLandmarks(
          int index, com.navatar.protobufs.LandmarkProto.Landmark value) {
        if (landmarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandmarksIsMutable();
          landmarks_.set(index, value);
          onChanged();
        } else {
          landmarksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder setLandmarks(
          int index, com.navatar.protobufs.LandmarkProto.Landmark.Builder builderForValue) {
        if (landmarksBuilder_ == null) {
          ensureLandmarksIsMutable();
          landmarks_.set(index, builderForValue.build());
          onChanged();
        } else {
          landmarksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder addLandmarks(com.navatar.protobufs.LandmarkProto.Landmark value) {
        if (landmarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandmarksIsMutable();
          landmarks_.add(value);
          onChanged();
        } else {
          landmarksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder addLandmarks(
          int index, com.navatar.protobufs.LandmarkProto.Landmark value) {
        if (landmarksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLandmarksIsMutable();
          landmarks_.add(index, value);
          onChanged();
        } else {
          landmarksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder addLandmarks(
          com.navatar.protobufs.LandmarkProto.Landmark.Builder builderForValue) {
        if (landmarksBuilder_ == null) {
          ensureLandmarksIsMutable();
          landmarks_.add(builderForValue.build());
          onChanged();
        } else {
          landmarksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder addLandmarks(
          int index, com.navatar.protobufs.LandmarkProto.Landmark.Builder builderForValue) {
        if (landmarksBuilder_ == null) {
          ensureLandmarksIsMutable();
          landmarks_.add(index, builderForValue.build());
          onChanged();
        } else {
          landmarksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder addAllLandmarks(
          java.lang.Iterable<? extends com.navatar.protobufs.LandmarkProto.Landmark> values) {
        if (landmarksBuilder_ == null) {
          ensureLandmarksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, landmarks_);
          onChanged();
        } else {
          landmarksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder clearLandmarks() {
        if (landmarksBuilder_ == null) {
          landmarks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          landmarksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public Builder removeLandmarks(int index) {
        if (landmarksBuilder_ == null) {
          ensureLandmarksIsMutable();
          landmarks_.remove(index);
          onChanged();
        } else {
          landmarksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public com.navatar.protobufs.LandmarkProto.Landmark.Builder getLandmarksBuilder(
          int index) {
        return getLandmarksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder getLandmarksOrBuilder(
          int index) {
        if (landmarksBuilder_ == null) {
          return landmarks_.get(index);  } else {
          return landmarksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public java.util.List<? extends com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder> 
           getLandmarksOrBuilderList() {
        if (landmarksBuilder_ != null) {
          return landmarksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(landmarks_);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public com.navatar.protobufs.LandmarkProto.Landmark.Builder addLandmarksBuilder() {
        return getLandmarksFieldBuilder().addBuilder(
            com.navatar.protobufs.LandmarkProto.Landmark.getDefaultInstance());
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public com.navatar.protobufs.LandmarkProto.Landmark.Builder addLandmarksBuilder(
          int index) {
        return getLandmarksFieldBuilder().addBuilder(
            index, com.navatar.protobufs.LandmarkProto.Landmark.getDefaultInstance());
      }
      /**
       * <code>repeated .com.navatar.protobufs.Landmark landmarks = 2;</code>
       *
       * <pre>
       * This floor's landmarks. 
       * </pre>
       */
      public java.util.List<com.navatar.protobufs.LandmarkProto.Landmark.Builder> 
           getLandmarksBuilderList() {
        return getLandmarksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navatar.protobufs.LandmarkProto.Landmark, com.navatar.protobufs.LandmarkProto.Landmark.Builder, com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder> 
          getLandmarksFieldBuilder() {
        if (landmarksBuilder_ == null) {
          landmarksBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.navatar.protobufs.LandmarkProto.Landmark, com.navatar.protobufs.LandmarkProto.Landmark.Builder, com.navatar.protobufs.LandmarkProto.LandmarkOrBuilder>(
                  landmarks_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          landmarks_ = null;
        }
        return landmarksBuilder_;
      }

      private java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> navigableSpaces_ =
        java.util.Collections.emptyList();
      private void ensureNavigableSpacesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          navigableSpaces_ = new java.util.ArrayList<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace>(navigableSpaces_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.navatar.protobufs.NavigableSpaceProto.NavigableSpace, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder, com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder> navigableSpacesBuilder_;

      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> getNavigableSpacesList() {
        if (navigableSpacesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(navigableSpaces_);
        } else {
          return navigableSpacesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public int getNavigableSpacesCount() {
        if (navigableSpacesBuilder_ == null) {
          return navigableSpaces_.size();
        } else {
          return navigableSpacesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.NavigableSpaceProto.NavigableSpace getNavigableSpaces(int index) {
        if (navigableSpacesBuilder_ == null) {
          return navigableSpaces_.get(index);
        } else {
          return navigableSpacesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder setNavigableSpaces(
          int index, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace value) {
        if (navigableSpacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.set(index, value);
          onChanged();
        } else {
          navigableSpacesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder setNavigableSpaces(
          int index, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder builderForValue) {
        if (navigableSpacesBuilder_ == null) {
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.set(index, builderForValue.build());
          onChanged();
        } else {
          navigableSpacesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder addNavigableSpaces(com.navatar.protobufs.NavigableSpaceProto.NavigableSpace value) {
        if (navigableSpacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.add(value);
          onChanged();
        } else {
          navigableSpacesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder addNavigableSpaces(
          int index, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace value) {
        if (navigableSpacesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.add(index, value);
          onChanged();
        } else {
          navigableSpacesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder addNavigableSpaces(
          com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder builderForValue) {
        if (navigableSpacesBuilder_ == null) {
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.add(builderForValue.build());
          onChanged();
        } else {
          navigableSpacesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder addNavigableSpaces(
          int index, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder builderForValue) {
        if (navigableSpacesBuilder_ == null) {
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.add(index, builderForValue.build());
          onChanged();
        } else {
          navigableSpacesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder addAllNavigableSpaces(
          java.lang.Iterable<? extends com.navatar.protobufs.NavigableSpaceProto.NavigableSpace> values) {
        if (navigableSpacesBuilder_ == null) {
          ensureNavigableSpacesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, navigableSpaces_);
          onChanged();
        } else {
          navigableSpacesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder clearNavigableSpaces() {
        if (navigableSpacesBuilder_ == null) {
          navigableSpaces_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          navigableSpacesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public Builder removeNavigableSpaces(int index) {
        if (navigableSpacesBuilder_ == null) {
          ensureNavigableSpacesIsMutable();
          navigableSpaces_.remove(index);
          onChanged();
        } else {
          navigableSpacesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder getNavigableSpacesBuilder(
          int index) {
        return getNavigableSpacesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder getNavigableSpacesOrBuilder(
          int index) {
        if (navigableSpacesBuilder_ == null) {
          return navigableSpaces_.get(index);  } else {
          return navigableSpacesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public java.util.List<? extends com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder> 
           getNavigableSpacesOrBuilderList() {
        if (navigableSpacesBuilder_ != null) {
          return navigableSpacesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(navigableSpaces_);
        }
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder addNavigableSpacesBuilder() {
        return getNavigableSpacesFieldBuilder().addBuilder(
            com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.getDefaultInstance());
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder addNavigableSpacesBuilder(
          int index) {
        return getNavigableSpacesFieldBuilder().addBuilder(
            index, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.getDefaultInstance());
      }
      /**
       * <code>repeated .com.navatar.protobufs.NavigableSpace navigableSpaces = 3;</code>
       *
       * <pre>
       * The navigable spaces of this floor. 
       * </pre>
       */
      public java.util.List<com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder> 
           getNavigableSpacesBuilderList() {
        return getNavigableSpacesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.navatar.protobufs.NavigableSpaceProto.NavigableSpace, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder, com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder> 
          getNavigableSpacesFieldBuilder() {
        if (navigableSpacesBuilder_ == null) {
          navigableSpacesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.navatar.protobufs.NavigableSpaceProto.NavigableSpace, com.navatar.protobufs.NavigableSpaceProto.NavigableSpace.Builder, com.navatar.protobufs.NavigableSpaceProto.NavigableSpaceOrBuilder>(
                  navigableSpaces_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          navigableSpaces_ = null;
        }
        return navigableSpacesBuilder_;
      }

      private com.navatar.protobufs.MinimapProto.Minimap minimap_ = com.navatar.protobufs.MinimapProto.Minimap.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.navatar.protobufs.MinimapProto.Minimap, com.navatar.protobufs.MinimapProto.Minimap.Builder, com.navatar.protobufs.MinimapProto.MinimapOrBuilder> minimapBuilder_;
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public boolean hasMinimap() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.MinimapProto.Minimap getMinimap() {
        if (minimapBuilder_ == null) {
          return minimap_;
        } else {
          return minimapBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public Builder setMinimap(com.navatar.protobufs.MinimapProto.Minimap value) {
        if (minimapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minimap_ = value;
          onChanged();
        } else {
          minimapBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public Builder setMinimap(
          com.navatar.protobufs.MinimapProto.Minimap.Builder builderForValue) {
        if (minimapBuilder_ == null) {
          minimap_ = builderForValue.build();
          onChanged();
        } else {
          minimapBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public Builder mergeMinimap(com.navatar.protobufs.MinimapProto.Minimap value) {
        if (minimapBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              minimap_ != com.navatar.protobufs.MinimapProto.Minimap.getDefaultInstance()) {
            minimap_ =
              com.navatar.protobufs.MinimapProto.Minimap.newBuilder(minimap_).mergeFrom(value).buildPartial();
          } else {
            minimap_ = value;
          }
          onChanged();
        } else {
          minimapBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public Builder clearMinimap() {
        if (minimapBuilder_ == null) {
          minimap_ = com.navatar.protobufs.MinimapProto.Minimap.getDefaultInstance();
          onChanged();
        } else {
          minimapBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.MinimapProto.Minimap.Builder getMinimapBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getMinimapFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      public com.navatar.protobufs.MinimapProto.MinimapOrBuilder getMinimapOrBuilder() {
        if (minimapBuilder_ != null) {
          return minimapBuilder_.getMessageOrBuilder();
        } else {
          return minimap_;
        }
      }
      /**
       * <code>optional .com.navatar.protobufs.Minimap minimap = 4;</code>
       *
       * <pre>
       * The minimap representing the navigability of this floor. 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.navatar.protobufs.MinimapProto.Minimap, com.navatar.protobufs.MinimapProto.Minimap.Builder, com.navatar.protobufs.MinimapProto.MinimapOrBuilder> 
          getMinimapFieldBuilder() {
        if (minimapBuilder_ == null) {
          minimapBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.navatar.protobufs.MinimapProto.Minimap, com.navatar.protobufs.MinimapProto.Minimap.Builder, com.navatar.protobufs.MinimapProto.MinimapOrBuilder>(
                  getMinimap(),
                  getParentForChildren(),
                  isClean());
          minimap_ = null;
        }
        return minimapBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.navatar.protobufs.Floor)
    }

    static {
      defaultInstance = new Floor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.navatar.protobufs.Floor)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_navatar_protobufs_Floor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_navatar_protobufs_Floor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020FloorProto.proto\022\025com.navatar.protobuf" +
      "s\032\023LandmarkProto.proto\032\031NavigableSpacePr" +
      "oto.proto\032\022MinimapProto.proto\"\274\001\n\005Floor\022" +
      "\016\n\006number\030\001 \001(\005\0222\n\tlandmarks\030\002 \003(\0132\037.com" +
      ".navatar.protobufs.Landmark\022>\n\017navigable" +
      "Spaces\030\003 \003(\0132%.com.navatar.protobufs.Nav" +
      "igableSpace\022/\n\007minimap\030\004 \001(\0132\036.com.navat" +
      "ar.protobufs.Minimap"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.navatar.protobufs.LandmarkProto.getDescriptor(),
          com.navatar.protobufs.NavigableSpaceProto.getDescriptor(),
          com.navatar.protobufs.MinimapProto.getDescriptor(),
        }, assigner);
    internal_static_com_navatar_protobufs_Floor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_navatar_protobufs_Floor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_navatar_protobufs_Floor_descriptor,
        new java.lang.String[] { "Number", "Landmarks", "NavigableSpaces", "Minimap", });
    com.navatar.protobufs.LandmarkProto.getDescriptor();
    com.navatar.protobufs.NavigableSpaceProto.getDescriptor();
    com.navatar.protobufs.MinimapProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
